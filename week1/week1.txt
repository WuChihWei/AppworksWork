2. 

●  git status  - The git status command displays the state of the working directory and the staging area. It lets you see which changes have been staged, which haven’t, and which files aren’t being tracked by Git. Status output does not show you any information regarding the committed project history. For this, you need to use git log.   
●  git add  -is the first command in a chain of operations that directs Git to "save" a snapshot of the current project state, into the commit history.  
 ●  git commit   captures a snapshot of the project's currently staged changes. Committed snapshots can be thought of as “safe” versions of a project—Git will never change them unless you explicitly ask it to. 
●  git log   is a utility tool to review and read a history of everything that happens to a repository.  
●  git push [ Repo_name ] [ Branch_name ]   is used to upload local repository content to a remote repository. 
●  git remote -v  lets you create, view, and delete connections to other repositories. 
●  git branch  is simply a lightweight movable pointer to one of these commits. The default branch name in Git is master . As you start making commits, you're given a master branch that points to the last commit you made. Every time you commit, the master branch pointer moves forward automatically.

●  fork  is a git clone operation executed on a server copy of a projects repo.



3. Please describe how to establish a GitHub repo and how to upload the local projects to GitHub. Try to explain your answers with as much detail as possible.

1> Into Github, tap "New" button on Repositories page. And name the Repository name then click the "Add a README file" and "Choose a license with MIT License"

2> Open terminal text ls) to find the current content of current position, choose the position where you want to store the Github link.

3> In terminal, text (cd) to your intended position, then copy the Repository link, and text (git clone + project link) of the link

4> Move your project to the file where you download from GitHub.

5> After that, in terminal (cd) to your downloaded file then 

6> text (git status)

7> text (git add.)

8> text (git status) again to confirm the condition of the file

9> text (git commit -m"words") to record your modified information

10> Finally, text (git push), check the file whether successfully upload on Github page.





Basic
Batch #16 / iOS Class
Remote Learning Assignment - Week 1



1. In Swift, we usually define a variable through the syntax as below:
                              .var x: Int = 10.
We use the formula:
2 * 

var radius:Int=10
let Pi = 3.14

let circle = 2*radius*Pi
print(circle)




2. 

var x:Int= 1
var y:Int =2

let average = ( x + Y ) / 2
print(average)


3. 

var x:Int= 1
var y:Int =2

let average = Double( x + Y ) / 2
print(average)


* 4. 

var flag = true => var flag: Bool = true 
var inputString = "Hello world." => var inputString: String = "Hello world."
let bitsInBite = 8  =>  let bitsInBite: Int = 8
let averageScore = 86.8 => let averageScore: Double = 86.8



5. 

Var OriginalSalary: Int =  22000
OriginalSalary += 28000
print(OriginalSalary)



6. 

5==5



* 7. 

let x:Int = 10
let y:Int = 3
let remainder = x % y
print(remainder)



8. 

let: You can never change it again. If you try to change, the Swift compiler will give you an error.
var: You can change in any times.



9. 

Each letter uses capital word.



10.
enables a compiler to deduce the type of a particular expression automatically when it compiles your code, simply by examining the values you provide.


11.
   var phoneNumber = 0987654321
phoneNumber = "Hello world."

var phoneNumber = 0987654321 => var phoneNumber: String = “0987654321”
phoneNumber = "Hello world."  => let phoneNumber: String = "Hello world." 






Collection
Batch #16 / iOS Class
Remote Learning Assignment - Week 1
You should know how to declare an array in Swift, and also how to add, remove, insert, read an object in an array. You should be familiar with the following syntax: append , .insert , remove .
Arrays are dangerous in swift. If you access the array with an index which is out of range, your app will crash with fatal error. Please interact with the array very carefully.



1. 
var myFriends: [String] = [ ]

2. 
myFriends += ["Ian", "Bomi", "Kevin"]

3. 

myFriends.append("Michael")

4. 

myFriends.remove(at:2)
myFriends.insert("Kevin", at: 0)

5.

for myFriend in myFriends {
    print(myFriend)
}

6. Now I want to know who is at index 5 in the myFriends array, try to find the answer
for me. Please explain how you get the answer and why the answer is it.

There is only index 4 in this code, so that index 5 does not exist.

7. 

myFriends.first

8. 

myFriends.last

9. 

var myCountryNumber: [String: Int] = [:]

10. 

myCountryNumber = ["US":1, "GB":44, "JP":81]

11. 

myCountryNumber.updateValue(0, forKey: "GB")

12. 

var emptyDictionary: [String: Int] = [:]

13. 
(4/6) 2022.3.21 - 2022.3.27
          
myCountryNumber.removeValue(forkey: " “)




Control Flow
Batch #16 / iOS Class
Remote Learning Assignment - Week 1



1. Here is an array:
 let lottoNumbers = [10, 9, 8, 7, 6, 5]
Please use For-Loop and Range to print the last three members in the
.lottoNumbers. array.


let lottoNumbers = [10, 9, 8, 7, 6, 5]
for i in 3...5{
        print(lottoNumbers[i])
}



2. 


let list = [5,6,7,8,9,10]
let reverseList = list.reversed()

for i in list {
    print(i)
}

for i in reverseList {
    if (i % 2 == 0) {
        print(i)
}
}




3. 

var num = 4
while num < 10 {
    num += 1
    print(num)
}

while num <= 10 && num > 5 {
    if (num % 2 == 0){
        print(num)
}
    num -= 1
}


4. 


var num = 4
repeat{
    num += 1
    print(num)
} while num < 10

repeat {
    if (num % 2 == 0){
        print(num)
}
    num -= 1
} while num <= 10 && num > 5



5. What are the differences between while and repeat-while?

A repeat loop will always execute once since the condition is at the end of the construct whereas a while loop may never execute since the condition is at the beginning of the construct


6.

func howIsTheWeather(isRaining: Bool){
    if(isRaining){
        print("Is raining, I don't want to work today")
    } else {
        print("Although it's sunny, I still don't want to work today")
    }
}


7. 
func printJobLevel(jobLevel: Int) {
    switch jobLevel {
    case 1:
        print("Member")
    case 2:
        print("Team Leader")
    case 3:
        print("Manager")
    case 4:
        print("Director")
    default:
        print("We don't have this job")
    }
}

printJobLevel(jobLevel: 0)
printJobLevel(jobLevel: 1)
printJobLevel(jobLevel: 2)
printJobLevel(jobLevel: 3)







Batch #16 / iOS Class
Remote Learning Assignment - Week 1


Function


1. 

func greet(person: String) -> String {
let greeting = "Hello, " + person
return greeting
}
print(greet(person: "LUKE"))


＊2. 



func multiply( a: Int, b: Int = 10) {

    print(a * b)

}



3. 

The argument label is used when calling the function; each argument is written in the function call with its argument label before it. The parameter name is used in the implementation of the function.


4.

 
func birthday( ) -> String {
}
=>String

func payment( ) -> Double {
 }
=> Double





